---
name: Build And Deploy Dev
on:
  push:
    branches: [dev, env-workflows] # TODO: Just DEV
  workflow_dispatch:
env:
  REGISTRY: ghcr.io
jobs:
  # build:
  #   permissions:
  #     packages: write
  #   uses: ipfs-elastic-provider/ipfs-elastic-provider-bitswap-peer/.github/workflows/shared-build.yaml@env-workflows # TODO: @dev
  #   with:
  #     docker_image_version_suffix_label: dev
   build:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
      # image_repository: ${{ steps.setOutputs.outputs.image_repository }}
      # package_version: ${{ steps.setOutputs.outputs.package_version }}
      # build_date: ${{ steps.setOutputs.outputs.build_date }}
    steps:
    - id: step1
      run: echo "::set-output name=test::hello"
    - id: step2
      run: echo "::set-output name=test::world"
   testoutputfrombuild:
    runs-on: ubuntu-latest
    needs: build
    steps:
    # - run: echo ${{ needs.build.outputs.build_date }} ${{ needs.build.outputs.package_version }}
    - run: echo ${{needs.build.outputs.output1}} ${{needs.build.outputs.output2}}
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   environment: dev
  #   steps:
  #   - name: Checkout deployment repository
  #     uses: actions/checkout@v3
  #     with:
  #       repository: ipfs-elastic-provider/ipfs-elastic-provider-bitswap-peer-deployment
  #       path: deployment
  #       token: ${{ secrets.DEPLOYMENT_PERSONAL_ACCESS_TOKEN }}
  #   - name: Deploy new image
  #     run: |
  #       cd deployment
  #       git config user.name ${{ github.actor }}
  #       git config user.email ${{ github.actor }}@users.noreply.github.com
  #       yq -iP ".image.version=\"${{ needs.build.outputs.build_date }}-dev\"" helm/values-dev.yaml
  #       git commit -am "feat: Deployed version ${{ needs.build.outputs.package_version }}-${{ needs.build.outputs.build_date }}-dev."
  #       git push
